2025-03-09 13:51:25.859 +03:00 [INF] User profile is available. Using '/Users/taft/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-09 13:51:25.885 +03:00 [INF] Creating key {5ab2ac71-23a8-42c9-8cfa-3d223bcb7f42} with creation date 2025-03-09 10:51:25Z, activation date 2025-03-09 10:51:25Z, and expiration date 2025-06-07 10:51:25Z.
2025-03-09 13:51:25.888 +03:00 [WRN] No XML encryptor configured. Key {5ab2ac71-23a8-42c9-8cfa-3d223bcb7f42} may be persisted to storage in unencrypted form.
2025-03-09 13:51:25.889 +03:00 [INF] Writing data to file '/Users/taft/.aspnet/DataProtection-Keys/key-5ab2ac71-23a8-42c9-8cfa-3d223bcb7f42.xml'.
2025-03-09 13:51:26.267 +03:00 [INF] Now listening on: https://localhost:7285
2025-03-09 13:51:26.267 +03:00 [INF] Now listening on: http://localhost:5026
2025-03-09 13:51:26.296 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-09 13:51:26.296 +03:00 [INF] Hosting environment: Development
2025-03-09 13:51:26.296 +03:00 [INF] Content root path: /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API
2025-03-09 13:51:27.494 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/index.html - -
2025-03-09 13:51:27.541 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/index.html - - - 200 - text/html;charset=utf-8 46.9129ms
2025-03-09 13:51:27.663 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui-bundle.js - -
2025-03-09 13:51:27.663 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui.css - -
2025-03-09 13:51:27.671 +03:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2025-03-09 13:51:27.671 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui.css - - - 200 144929 text/css 7.5753ms
2025-03-09 13:51:27.671 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui-standalone-preset.js - -
2025-03-09 13:51:27.825 +03:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2025-03-09 13:51:27.826 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui-standalone-preset.js - - - 200 312163 text/javascript 154.3523ms
2025-03-09 13:51:27.827 +03:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2025-03-09 13:51:27.827 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/swagger-ui-bundle.js - - - 200 1061536 text/javascript 164.9159ms
2025-03-09 13:51:27.910 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - -
2025-03-09 13:51:27.974 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 64.4869ms
2025-03-09 13:56:44.849 +03:00 [INF] User profile is available. Using '/Users/taft/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-09 13:56:45.290 +03:00 [INF] Now listening on: https://localhost:7285
2025-03-09 13:56:45.290 +03:00 [INF] Now listening on: http://localhost:5026
2025-03-09 13:56:45.291 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-09 13:56:45.291 +03:00 [INF] Hosting environment: Development
2025-03-09 13:56:45.291 +03:00 [INF] Content root path: /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API
2025-03-09 13:56:46.527 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/index.html - -
2025-03-09 13:56:46.579 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/index.html - - - 200 - text/html;charset=utf-8 53.0640ms
2025-03-09 13:56:46.661 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - -
2025-03-09 13:56:46.700 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 39.2390ms
2025-03-09 13:56:51.206 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - -
2025-03-09 13:56:51.216 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:56:51.234 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:56:51.243 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (ETicaretAPI.API).
2025-03-09 13:56:51.250 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-09 13:56:51.257 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API) in 11.0657ms
2025-03-09 13:56:51.257 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:56:51.258 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 52.3402ms
2025-03-09 13:56:51.262 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - -
2025-03-09 13:56:51.264 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:56:51.331 +03:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2025-03-09 13:56:51.333 +03:00 [INF] AuthenticationScheme: Admin was challenged.
2025-03-09 13:56:51.334 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - - - 401 0 - 71.1032ms
2025-03-09 13:56:51.338 +03:00 [INF] Request starting HTTP/1.1 OPTIONS https://localhost:7285/api/auth/refreshtokenlogin - -
2025-03-09 13:56:51.338 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:56:51.339 +03:00 [INF] Request finished HTTP/1.1 OPTIONS https://localhost:7285/api/auth/refreshtokenlogin - - - 204 - - 0.5773ms
2025-03-09 13:56:51.364 +03:00 [INF] Request starting HTTP/1.1 POST https://localhost:7285/api/auth/refreshtokenlogin application/json 21
2025-03-09 13:56:51.365 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:56:51.365 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.AuthController.RefreshTokenLogin (ETicaretAPI.API)'
2025-03-09 13:56:51.372 +03:00 [INF] Route matched with {action = "RefreshTokenLogin", controller = "Auth"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] RefreshTokenLogin(ETicaretAPI.Application.Features.Commands.RefreshTokenLogin.RefreshTokenLoginCommandRequest) on controller ETicaretAPI.API.Controllers.AuthController (ETicaretAPI.API).
2025-03-09 13:56:51.387 +03:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.Collections.Generic.KeyValuePair`2[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Collections.Generic.IEnumerable`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]][]'.
2025-03-09 13:56:51.390 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.AuthController.RefreshTokenLogin (ETicaretAPI.API) in 18.1364ms
2025-03-09 13:56:51.390 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.AuthController.RefreshTokenLogin (ETicaretAPI.API)'
2025-03-09 13:56:51.391 +03:00 [INF] Request finished HTTP/1.1 POST https://localhost:7285/api/auth/refreshtokenlogin application/json 21 - 400 - application/json;+charset=utf-8 26.4334ms
2025-03-09 13:57:08.804 +03:00 [INF] User profile is available. Using '/Users/taft/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2025-03-09 13:57:09.122 +03:00 [INF] Now listening on: https://localhost:7285
2025-03-09 13:57:09.122 +03:00 [INF] Now listening on: http://localhost:5026
2025-03-09 13:57:09.123 +03:00 [INF] Application started. Press Ctrl+C to shut down.
2025-03-09 13:57:09.123 +03:00 [INF] Hosting environment: Development
2025-03-09 13:57:09.123 +03:00 [INF] Content root path: /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API
2025-03-09 13:57:10.277 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/index.html - -
2025-03-09 13:57:10.322 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/index.html - - - 200 - text/html;charset=utf-8 46.0070ms
2025-03-09 13:57:10.362 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - -
2025-03-09 13:57:10.402 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 39.9419ms
2025-03-09 13:57:17.082 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - -
2025-03-09 13:57:17.094 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:17.112 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:17.121 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (ETicaretAPI.API).
2025-03-09 13:57:17.126 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-09 13:57:17.133 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API) in 9.8372ms
2025-03-09 13:57:17.133 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:17.134 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 52.2396ms
2025-03-09 13:57:17.137 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - -
2025-03-09 13:57:17.138 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:17.138 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:17.147 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:17.645 +03:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:17.659 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-09 13:57:17.660 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-09 13:57:17.716 +03:00 [INF] Executed DbCommand (11ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:17.720 +03:00 [INF] Get All Products
2025-03-09 13:57:17.720 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:17.729 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 581.3903ms
2025-03-09 13:57:17.729 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:17.731 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 594.3783ms
2025-03-09 13:57:21.956 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - -
2025-03-09 13:57:21.958 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:21.960 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:21.961 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (ETicaretAPI.API).
2025-03-09 13:57:21.961 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-09 13:57:21.962 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API) in 0.7909ms
2025-03-09 13:57:21.962 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:21.962 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 5.5453ms
2025-03-09 13:57:21.964 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=6&size=12 - -
2025-03-09 13:57:21.964 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:21.964 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:21.964 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:22.020 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:22.026 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:22.026 +03:00 [INF] Get All Products
2025-03-09 13:57:22.026 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:22.026 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 62.2686ms
2025-03-09 13:57:22.026 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:22.027 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=6&size=12 - - - 200 - application/json;+charset=utf-8 62.8632ms
2025-03-09 13:57:26.891 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=-5&size=12 - -
2025-03-09 13:57:26.892 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:26.892 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:26.892 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:26.913 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:26.923 +03:00 [ERR] Failed executing DbCommand (8ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:26.950 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'ETicaretAPI.Persistence.Contexts.ETicaretAPIDbContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:27.056 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 163.4647ms
2025-03-09 13:57:27.056 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:27.065 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryHandler.Handle(GetAllProductsQueryRequest request, CancellationToken cancellationToken) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Core/ETicaretAPI.Application/Features/Queries/Product/GetAllProducts/GetAllProductsQueryHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at ETicaretAPI.API.Controllers.ProductsController.Get(GetAllProductsQueryRequest getAllProductsQueryRequest) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Controllers/ProductsController.cs:line 37
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Program.cs:line 117
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:27.073 +03:00 [ERR] 2201X: OFFSET must not be negative
2025-03-09 13:57:27.074 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=-5&size=12 - - - 500 - application/json 183.4057ms
2025-03-09 13:57:28.010 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=-4&size=12 - -
2025-03-09 13:57:28.010 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:28.011 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:28.011 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:28.018 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:28.024 +03:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:28.026 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'ETicaretAPI.Persistence.Contexts.ETicaretAPIDbContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:28.085 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 74.479ms
2025-03-09 13:57:28.086 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:28.096 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryHandler.Handle(GetAllProductsQueryRequest request, CancellationToken cancellationToken) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Core/ETicaretAPI.Application/Features/Queries/Product/GetAllProducts/GetAllProductsQueryHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at ETicaretAPI.API.Controllers.ProductsController.Get(GetAllProductsQueryRequest getAllProductsQueryRequest) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Controllers/ProductsController.cs:line 37
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Program.cs:line 117
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:28.097 +03:00 [ERR] 2201X: OFFSET must not be negative
2025-03-09 13:57:28.098 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=-4&size=12 - - - 500 - application/json 88.0315ms
2025-03-09 13:57:28.777 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=-3&size=12 - -
2025-03-09 13:57:28.777 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:28.777 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:28.778 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:28.784 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:28.791 +03:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:28.793 +03:00 [ERR] An exception occurred while iterating over the results of a query for context type 'ETicaretAPI.Persistence.Contexts.ETicaretAPIDbContext'.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:28.856 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 78.224ms
2025-03-09 13:57:28.856 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:28.867 +03:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 2201X: OFFSET must not be negative
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|222_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReader(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.InitializeReader(Enumerator enumerator)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.<>c.<MoveNext>b__21_0(DbContext _, Enumerator enumerator)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.Enumerator.MoveNext()
   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryHandler.Handle(GetAllProductsQueryRequest request, CancellationToken cancellationToken) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Core/ETicaretAPI.Application/Features/Queries/Product/GetAllProducts/GetAllProductsQueryHandler.cs:line 27
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at ETicaretAPI.API.Controllers.ProductsController.Get(GetAllProductsQueryRequest getAllProductsQueryRequest) in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Controllers/ProductsController.cs:line 37
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Program.<>c.<<<Main>$>b__0_5>d.MoveNext() in /Users/taft/Desktop/ETicaretUygulamasi/ETicaretAPI/Presentation/ETicaretAPI.API/Program.cs:line 117
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Serilog.AspNetCore.RequestLoggingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddlewareImpl.<Invoke>g__Awaited|8_0(ExceptionHandlerMiddlewareImpl middleware, HttpContext context, Task task)
  Exception data:
    Severity: ERROR
    SqlState: 2201X
    MessageText: OFFSET must not be negative
    File: nodeLimit.c
    Line: 372
    Routine: recompute_limits
2025-03-09 13:57:28.868 +03:00 [ERR] 2201X: OFFSET must not be negative
2025-03-09 13:57:28.868 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=-3&size=12 - - - 500 - application/json 91.0352ms
2025-03-09 13:57:33.474 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - -
2025-03-09 13:57:33.475 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:33.475 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:33.475 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (ETicaretAPI.API).
2025-03-09 13:57:33.475 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-09 13:57:33.476 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API) in 0.4763ms
2025-03-09 13:57:33.476 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:33.476 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 1.5201ms
2025-03-09 13:57:33.479 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=5&size=12 - -
2025-03-09 13:57:33.479 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:33.479 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:33.479 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:33.486 +03:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:33.490 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:33.490 +03:00 [INF] Get All Products
2025-03-09 13:57:33.490 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:33.490 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 10.9054ms
2025-03-09 13:57:33.490 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:33.491 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=5&size=12 - - - 200 - application/json;+charset=utf-8 11.5939ms
2025-03-09 13:57:37.737 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - -
2025-03-09 13:57:37.738 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:37.738 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:37.739 +03:00 [INF] Route matched with {action = "GetBaseStorageUrl", controller = "Files"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult GetBaseStorageUrl() on controller ETicaretAPI.API.Controllers.FilesController (ETicaretAPI.API).
2025-03-09 13:57:37.739 +03:00 [INF] Executing OkObjectResult, writing value of type '<>f__AnonymousType0`1[[System.String, System.Private.CoreLib, Version=7.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]'.
2025-03-09 13:57:37.740 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API) in 0.9629ms
2025-03-09 13:57:37.740 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.FilesController.GetBaseStorageUrl (ETicaretAPI.API)'
2025-03-09 13:57:37.740 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/files/GetBaseStorageUrl - - - 200 - application/json;+charset=utf-8 3.3387ms
2025-03-09 13:57:37.757 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - -
2025-03-09 13:57:37.757 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:37.761 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:37.762 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:37.771 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:37.776 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:37.776 +03:00 [INF] Get All Products
2025-03-09 13:57:37.776 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:37.777 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 14.6942ms
2025-03-09 13:57:37.777 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:37.777 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 19.9865ms
2025-03-09 13:57:42.835 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=1&size=12 - -
2025-03-09 13:57:42.836 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:42.836 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:42.836 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:42.843 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:42.848 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-09 13:57:42.848 +03:00 [WRN] The query uses a row limiting operator ('Skip'/'Take') without an 'OrderBy' operator. This may lead to unpredictable results. If the 'Distinct' operator is used after 'OrderBy', then make sure to use the 'OrderBy' operator after 'Distinct' as the ordering would otherwise get erased.
2025-03-09 13:57:42.864 +03:00 [INF] Executed DbCommand (4ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_0 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:42.864 +03:00 [INF] Get All Products
2025-03-09 13:57:42.864 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:42.865 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 28.5724ms
2025-03-09 13:57:42.865 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:42.865 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=1&size=12 - - - 200 - application/json;+charset=utf-8 30.0591ms
2025-03-09 13:57:48.654 +03:00 [INF] Request starting HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - -
2025-03-09 13:57:48.655 +03:00 [INF] CORS policy execution successful.
2025-03-09 13:57:48.655 +03:00 [INF] Executing endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:48.655 +03:00 [INF] Route matched with {action = "Get", controller = "Products"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Get(ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryRequest) on controller ETicaretAPI.API.Controllers.ProductsController (ETicaretAPI.API).
2025-03-09 13:57:48.663 +03:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Products" AS p
2025-03-09 13:57:48.668 +03:00 [INF] Executed DbCommand (3ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Name", t."Stock", t."Price", t."CreatedDate", t."UpdatedDate", t0."Id", t0."CreatedDate", t0."Discriminator", t0."FileName", t0."Path", t0."Storage", t0."Showcase", t0."ProductImageFilesId", t0."ProductsId"
FROM (
    SELECT p."Id", p."Name", p."Stock", p."Price", p."CreatedDate", p."UpdatedDate"
    FROM "Products" AS p
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT t1."Id", t1."CreatedDate", t1."Discriminator", t1."FileName", t1."Path", t1."Storage", t1."Showcase", p0."ProductImageFilesId", p0."ProductsId"
    FROM "ProductProductImageFile" AS p0
    INNER JOIN (
        SELECT f."Id", f."CreatedDate", f."Discriminator", f."FileName", f."Path", f."Storage", f."Showcase"
        FROM "Files" AS f
        WHERE f."Discriminator" = 'ProductImageFile'
    ) AS t1 ON p0."ProductImageFilesId" = t1."Id"
) AS t0 ON t."Id" = t0."ProductsId"
ORDER BY t."Id", t0."ProductImageFilesId", t0."ProductsId"
2025-03-09 13:57:48.668 +03:00 [INF] Get All Products
2025-03-09 13:57:48.668 +03:00 [INF] Executing OkObjectResult, writing value of type 'ETicaretAPI.Application.Features.Queries.Product.GetAllProducts.GetAllProductsQueryResponse'.
2025-03-09 13:57:48.668 +03:00 [INF] Executed action ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API) in 13.2426ms
2025-03-09 13:57:48.668 +03:00 [INF] Executed endpoint 'ETicaretAPI.API.Controllers.ProductsController.Get (ETicaretAPI.API)'
2025-03-09 13:57:48.668 +03:00 [INF] Request finished HTTP/1.1 GET https://localhost:7285/api/products?page=0&size=12 - - - 200 - application/json;+charset=utf-8 13.9307ms
